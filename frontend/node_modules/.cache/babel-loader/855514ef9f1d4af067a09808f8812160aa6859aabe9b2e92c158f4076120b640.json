{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\n//import { watchEffect, ref } from \"vue\";\nexport default {\n  //do testu ten setup tylko potem usune\n  /* setup() {\r\n  \tconst user = ref(JSON.parse(localStorage.getItem(\"user\")) || null);\r\n  \tconst accessToken = ref(localStorage.getItem(\"accessToken\") || null);\r\n  \tconst refreshToken = ref(localStorage.getItem(\"refreshToken\") || null);\r\n  \n  \tsetInterval(() => {\r\n  \t\tuser.value = JSON.parse(localStorage.getItem(\"user\")) || null;\r\n  \t\taccessToken.value = localStorage.getItem(\"accessToken\") || null;\r\n  \t\trefreshToken.value = localStorage.getItem(\"refreshToken\") || null;\r\n  \t}, 1000);\r\n  \n  \twatchEffect(() => {\r\n  \t\tconsole.log(\"User data:\", user.value);\r\n  \t\tconsole.log(\"Access Token:\", accessToken.value);\r\n  \t\tconsole.log(\"Refresh Token:\", refreshToken.value);\r\n  \t});\r\n  }, */\n  //dotąd usuwaj\n  data() {\n    return {\n      moves: [\"rock\", \"paper\", \"scissors\"],\n      playerMove: null,\n      opponentMove: null,\n      gameOver: false,\n      streakPoints: 0,\n      playerName: \"\",\n      gameStarted: false,\n      gameResult: null,\n      isUserLoggedIn: false\n    };\n  },\n  created() {\n    this.isUserLoggedIn = !!localStorage.getItem(\"user\");\n    const user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\n    if (user && user.username) {\n      this.playerName = user.username;\n    }\n  },\n  components: {},\n  methods: {\n    startGame() {\n      this.gameStarted = true;\n    },\n    logout() {\n      // Usuń dane użytkownika z localStorage\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"accessToken\");\n      localStorage.removeItem(\"refreshToken\");\n      // Ustaw dane na null to też do testów mam\n      this.user = null;\n      this.accessToken = null;\n      this.refreshToken = null;\n\n      // Ustaw flagę isUserLoggedIn na false\n      this.isUserLoggedIn = false;\n\n      // Przekieruj użytkownika do strony logowania\n      this.$router.push(\"/\");\n    },\n    makeMove(move) {\n      this.playerMove = move;\n      this.opponentMove = this.getRandomMove();\n      this.determineWinner();\n    },\n    getRandomMove() {\n      const randomIndex = Math.floor(Math.random() * this.moves.length);\n      return this.moves[randomIndex];\n    },\n    determineWinner() {\n      if (this.playerMove === this.opponentMove) {\n        this.gameResult = \"draw\";\n      } else if (this.playerMove === \"rock\" && this.opponentMove === \"scissors\" || this.playerMove === \"paper\" && this.opponentMove === \"rock\" || this.playerMove === \"scissors\" && this.opponentMove === \"paper\") {\n        this.gameResult = \"win\";\n        this.streakPoints++;\n      } else {\n        this.gameOver = true;\n      }\n    },\n    reloadPage() {\n      window.location.reload();\n    },\n    submitScore() {\n      const user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\n      console.log(user);\n      if (localStorage.getItem(\"user\")) {\n        this.playerName = user.username;\n      }\n      if (!this.playerName) {\n        console.error(\"Player name is undefined.error\");\n        return;\n      }\n      console.log(`Player: ${this.playerName}, Score:\n${this.streakPoints}`);\n      const dataToSend = {\n        player_name: this.playerName,\n        score: this.streakPoints\n      };\n      axios.post(\"http://localhost:8000/api/submit_score/\", dataToSend).then(response => {\n        console.log(response.data.message);\n        window.location.reload();\n      }).catch(error => {\n        console.error(\"NIE DZIAŁA XD\", error);\n      });\n    }\n  },\n  watch: {\n    streakPoints(newVal) {\n      console.log(\"Streak teraz:\", newVal);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","moves","playerMove","opponentMove","gameOver","streakPoints","playerName","gameStarted","gameResult","isUserLoggedIn","created","localStorage","getItem","user","JSON","parse","username","components","methods","startGame","logout","removeItem","accessToken","refreshToken","$router","push","makeMove","move","getRandomMove","determineWinner","randomIndex","Math","floor","random","length","reloadPage","window","location","reload","submitScore","console","log","error","dataToSend","player_name","score","post","then","response","message","catch","watch","newVal"],"sources":["C:\\Users\\Djeja\\Desktop\\DjangoVue-Game\\frontend\\src\\views\\GameVue.vue"],"sourcesContent":["<template>\r\n\t<div id=\"game\">\r\n\t\t<div class=\"logo\">\r\n\t\t\tRock Paper Scissors <br />\r\n\t\t\tGame\r\n\t\t</div>\r\n\r\n\t\t<!-- Menu gry/Starting Page coś takiego-->\r\n\t\t<div v-if=\"!gameStarted\">\r\n\t\t\t<div class=\"menu-buttons\">\r\n\t\t\t\t<button @click=\"startGame\" class=\"aqua menu-button\">Start</button>\r\n\t\t\t\t<router-link to=\"/scoreboard\" class=\"aqua menu-button\">Scoreboard</router-link>\r\n\t\t\t\t<router-link v-if=\"!isUserLoggedIn\" to=\"/login\" class=\"aqua menu-button\">Login</router-link>\r\n\t\t\t\t<router-link v-if=\"!isUserLoggedIn\" to=\"/register\" class=\"aqua menu-button\">Register</router-link>\r\n\t\t\t\t<router-link to=\"/reportbug\" class=\"aqua menu-button\">Report Bug</router-link>\r\n\t\t\t\t<button v-if=\"isUserLoggedIn\" @click=\"logout\" class=\"aqua menu-button\" style=\"color: red !important\">Logout</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- Po wystartowaniu gry-->\r\n\t\t<div v-else-if=\"!gameOver\">\r\n\t\t\t<p style=\"color: gold\">\r\n\t\t\t\tStreak: <span style=\"color: red\">{{ streakPoints }}</span>\r\n\t\t\t</p>\r\n\t\t\t<h2>Choose your move:</h2>\r\n\t\t\t<button @click=\"makeMove('rock')\" class=\"hover_bordered_button\">\r\n\t\t\t\t<img :src=\"require('@/assets/rock.png')\" alt=\"Rock\" />\r\n\t\t\t</button>\r\n\t\t\t<button @click=\"makeMove('paper')\" class=\"hover_bordered_button\">\r\n\t\t\t\t<img :src=\"require('@/assets/paper.png')\" alt=\"Paper\" />\r\n\t\t\t</button>\r\n\t\t\t<button @click=\"makeMove('scissors')\" class=\"hover_bordered_button\">\r\n\t\t\t\t<img :src=\"require('@/assets/scissors.png')\" alt=\"Scissors\" />\r\n\t\t\t</button>\r\n\t\t\t<h2>Round result:</h2>\r\n\t\t\t<div style=\"display: flex; justify-content: center; align-items: center; gap: 32px\">\r\n\t\t\t\t<p v-if=\"playerMove\">Your move:</p>\r\n\t\t\t\t<p v-if=\"opponentMove\">Enemy Move:</p>\r\n\t\t\t</div>\r\n\t\t\t<div style=\"display: flex; justify-content: center; align-items: center\">\r\n\t\t\t\t<p v-if=\"playerMove\">\r\n\t\t\t\t\t<img :src=\"require(`@/assets/${playerMove}.png`)\" alt=\"Player's Move\" />\r\n\t\t\t\t</p>\r\n\t\t\t\tVS\r\n\t\t\t\t<p v-if=\"opponentMove\">\r\n\t\t\t\t\t<img :src=\"require(`@/assets/${opponentMove}.png`)\" alt=\"Oponent's move\" />\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<p v-if=\"gameResult\">\r\n\t\t\t\tGame Result: <span style=\"color: gold\">{{ gameResult }}</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\r\n\t\t<!-- Zakończenie gry -->\r\n\t\t<div v-if=\"gameOver && streakPoints > 0\">\r\n\t\t\t<h2>Game Over</h2>\r\n\t\t\t<p>\r\n\t\t\t\tYour streak points:\r\n\t\t\t\t<span style=\"color: red\">{{ streakPoints }}</span>\r\n\t\t\t</p>\r\n\t\t\t<label v-if=\"!isUserLoggedIn\">Enter your name:</label>\r\n\t\t\t<input v-if=\"!isUserLoggedIn\" v-model=\"playerName\" id=\"playerName\" type=\"text\" maxlength=\"6\" />\r\n\t\t\t<p v-else style=\"color: gold\">Your name: {{ playerName }}</p>\r\n\t\t\t<br />\r\n\t\t\t<button @click=\"submitScore\" class=\"btn\" style=\"margin-top: 10px; margin-bottom: 10px; background-color: orange !important\">\r\n\t\t\t\tSubmit Score\r\n\t\t\t</button>\r\n\t\t\t<br /><button @click=\"reloadPage\" class=\"btn btn-primary\">Retry</button>\r\n\t\t</div>\r\n\r\n\t\t<div v-else-if=\"gameOver\">\r\n\t\t\t<h2><span style=\"color: red\">Game Over</span></h2>\r\n\t\t\t<h2>Round result:</h2>\r\n\t\t\t<div style=\"display: flex; justify-content: center; align-items: center; gap: 32px\">\r\n\t\t\t\t<p v-if=\"playerMove\">Your move:</p>\r\n\t\t\t\t<p v-if=\"opponentMove\">Enemy Move:</p>\r\n\t\t\t</div>\r\n\t\t\t<img :src=\"require(`@/assets/${playerMove}.png`)\" alt=\"Player's Move\" />\r\n\t\t\tVS\r\n\t\t\t<img :src=\"require(`@/assets/${opponentMove}.png`)\" alt=\"Oponent's move\" />\r\n\t\t\t<p>\r\n\t\t\t\tYour streak points:<span style=\"color: red\">{{ streakPoints }}</span>\r\n\t\t\t</p>\r\n\t\t\t<p>Sorry, you didn't score any points this time. Better luck next time!</p>\r\n\t\t\t<button @click=\"reloadPage\" class=\"btn btn-primary\">Retry</button>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n<script>\r\nimport axios from \"axios\";\r\n//import { watchEffect, ref } from \"vue\";\r\nexport default {\r\n\t//do testu ten setup tylko potem usune\r\n\t/* setup() {\r\n\t\tconst user = ref(JSON.parse(localStorage.getItem(\"user\")) || null);\r\n\t\tconst accessToken = ref(localStorage.getItem(\"accessToken\") || null);\r\n\t\tconst refreshToken = ref(localStorage.getItem(\"refreshToken\") || null);\r\n\r\n\t\tsetInterval(() => {\r\n\t\t\tuser.value = JSON.parse(localStorage.getItem(\"user\")) || null;\r\n\t\t\taccessToken.value = localStorage.getItem(\"accessToken\") || null;\r\n\t\t\trefreshToken.value = localStorage.getItem(\"refreshToken\") || null;\r\n\t\t}, 1000);\r\n\r\n\t\twatchEffect(() => {\r\n\t\t\tconsole.log(\"User data:\", user.value);\r\n\t\t\tconsole.log(\"Access Token:\", accessToken.value);\r\n\t\t\tconsole.log(\"Refresh Token:\", refreshToken.value);\r\n\t\t});\r\n\t}, */\r\n\t//dotąd usuwaj\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tmoves: [\"rock\", \"paper\", \"scissors\"],\r\n\t\t\tplayerMove: null,\r\n\t\t\topponentMove: null,\r\n\t\t\tgameOver: false,\r\n\t\t\tstreakPoints: 0,\r\n\t\t\tplayerName: \"\",\r\n\t\t\tgameStarted: false,\r\n\t\t\tgameResult: null,\r\n\t\t\tisUserLoggedIn: false,\r\n\t\t};\r\n\t},\r\n\tcreated() {\r\n\t\tthis.isUserLoggedIn = !!localStorage.getItem(\"user\");\r\n\t\tconst user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\r\n\r\n\t\tif (user && user.username) {\r\n\t\t\tthis.playerName = user.username;\r\n\t\t}\r\n\t},\r\n\tcomponents: {},\r\n\tmethods: {\r\n\t\tstartGame() {\r\n\t\t\tthis.gameStarted = true;\r\n\t\t},\r\n\t\tlogout() {\r\n\t\t\t// Usuń dane użytkownika z localStorage\r\n\t\t\tlocalStorage.removeItem(\"user\");\r\n\t\t\tlocalStorage.removeItem(\"accessToken\");\r\n\t\t\tlocalStorage.removeItem(\"refreshToken\");\r\n\t\t\t// Ustaw dane na null to też do testów mam\r\n\t\t\tthis.user = null;\r\n\t\t\tthis.accessToken = null;\r\n\t\t\tthis.refreshToken = null;\r\n\r\n\t\t\t// Ustaw flagę isUserLoggedIn na false\r\n\t\t\tthis.isUserLoggedIn = false;\r\n\r\n\t\t\t// Przekieruj użytkownika do strony logowania\r\n\t\t\tthis.$router.push(\"/\");\r\n\t\t},\r\n\t\tmakeMove(move) {\r\n\t\t\tthis.playerMove = move;\r\n\t\t\tthis.opponentMove = this.getRandomMove();\r\n\t\t\tthis.determineWinner();\r\n\t\t},\r\n\t\tgetRandomMove() {\r\n\t\t\tconst randomIndex = Math.floor(Math.random() * this.moves.length);\r\n\t\t\treturn this.moves[randomIndex];\r\n\t\t},\r\n\t\tdetermineWinner() {\r\n\t\t\tif (this.playerMove === this.opponentMove) {\r\n\t\t\t\tthis.gameResult = \"draw\";\r\n\t\t\t} else if (\r\n\t\t\t\t(this.playerMove === \"rock\" && this.opponentMove === \"scissors\") ||\r\n\t\t\t\t(this.playerMove === \"paper\" && this.opponentMove === \"rock\") ||\r\n\t\t\t\t(this.playerMove === \"scissors\" && this.opponentMove === \"paper\")\r\n\t\t\t) {\r\n\t\t\t\tthis.gameResult = \"win\";\r\n\t\t\t\tthis.streakPoints++;\r\n\t\t\t} else {\r\n\t\t\t\tthis.gameOver = true;\r\n\t\t\t}\r\n\t\t},\r\n\t\treloadPage() {\r\n\t\t\twindow.location.reload();\r\n\t\t},\r\n\t\tsubmitScore() {\r\n\t\t\tconst user = localStorage.getItem(\"user\") ? JSON.parse(localStorage.getItem(\"user\")) : null;\r\n\t\t\tconsole.log(user);\r\n\t\t\tif (localStorage.getItem(\"user\")) {\r\n\t\t\t\tthis.playerName = user.username;\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.playerName) {\r\n\t\t\t\tconsole.error(\"Player name is undefined.error\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tconsole.log(`Player: ${this.playerName}, Score:\r\n${this.streakPoints}`);\r\n\t\t\tconst dataToSend = { player_name: this.playerName, score: this.streakPoints };\r\n\t\t\taxios\r\n\t\t\t\t.post(\"http://localhost:8000/api/submit_score/\", dataToSend)\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\tconsole.log(response.data.message);\r\n\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.error(\"NIE DZIAŁA XD\", error);\r\n\t\t\t\t});\r\n\t\t},\r\n\t},\r\n\twatch: {\r\n\t\tstreakPoints(newVal) {\r\n\t\t\tconsole.log(\"Streak teraz:\", newVal);\r\n\t\t},\r\n\t},\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}